@using QuizManager.Helpers;
@using QuizManager.DBModels;
@using QuizManager.ModelViews;
@using QuizManager.Helpers.Models;
@using QuizManager.XmlModels;

@model TestListRedactorView

@{
    XmlQuestionType? type = null;
    switch (Model.Question.Type)
    {
        case QuestionType.Radio:
            type = XmlQuestionType.Radio;
            break;
        case QuestionType.Checkbox:
            type = XmlQuestionType.Checkbox;
            break;
        case QuestionType.ComboBox:
            type = XmlQuestionType.ComboBox;
            break;
    }
}

    @using (Ajax.BeginForm("SaveXmlListTest", null, new AjaxOptions() { UpdateTargetId = "inner" }, new { id = "SaveForm" }))
    {
        @Html.HiddenFor(x=>x.Section.Id)
        @Html.HiddenFor(x => x.Question.Id)
        @Html.HiddenFor(x => x.Quiz.Id)
        <input type="hidden" name="_XmlModel.ListType" value="@type" />

        <div class="form-inline">

            @Html.LabelFor(x => x.Question.Text, "Question:")

            @Html.TextBoxFor(x => x.Question.Text, new { @class = "form-control" })

            @Html.TextBoxFor(x=>x.Question.Value, new { @class = "form-control", type="number", min="1"})

            @RenderHelper.AddOptionButton("addLink")

        </div>

        <br />

        <ul id="options" class="list-group">

            @if (Model._XmlModel != null)
            {
                for (int i = 0; i < Model._XmlModel.Options.Count(); ++i)
                {
                    <li class="removeContainer list-group-item">

                        @Html.HiddenFor(x => x._XmlModel.Options[i].Id)

                        <div class="form-inline">
                            <div class="form-group">
                                @Html.TextBoxFor(x => x._XmlModel.Options[i].Text, new { @class = "form-control" })
                            </div>


                            @if (type == XmlQuestionType.Radio || type == XmlQuestionType.ComboBox)
                            {
                                <div class="radio">
                                    @Html.RadioButton("Ids", Model._XmlModel.Options[i].Id, Model._XmlModel.Options[i].IsTrue)
                                </div>
                            }
                            else if (type == XmlQuestionType.Checkbox)
                            {
                                <div class="checkbox">
                                    @RenderHelper.CheckBoxSimple("Ids", Model._XmlModel.Options[i].IsTrue, Model._XmlModel.Options[i].Id.ToString())
                                </div>
                            }

                            @RenderHelper.RemoveOptionButton("removeLink")

                        </div>
                        <br /><br />
                        <div class="form-group">

                            @Html.TextAreaFor(x => x._XmlModel.Options[i].Comment, new { @class = "form-control", placeholder = "Comment" })

                        </div>

                    </li>
                }
                }

        </ul>

        <div class="form-group pull-right">
            <input type="submit" class="btn btn-success" value="Save" />
        </div>
    }

    <div class="hidden">

        <li id="option" class="removeContainer list-group-item">

            <input type="hidden" />

            <div class="form-inline">
                <div class="form-group">
                    <input type="text" class="form-control" />
                </div>
                @if (type == XmlQuestionType.ComboBox || type == XmlQuestionType.Radio)
                {
                    <div class="radio">
                        <input type="radio" name="Ids" />
                    </div>
                }
                else if (type == XmlQuestionType.Checkbox)
                {
                    <div class="checkbox">
                        <input type="checkbox" name="Ids" />
                    </div>
                }

                @RenderHelper.RemoveOptionButton("removeLink")

            </div>

            <br /><br />
            <div class="form-group">

                <textarea class="form-control" placeholder="Comment" />

            </div>

        </li>

    </div>

