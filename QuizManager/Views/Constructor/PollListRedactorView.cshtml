@using QuizManager.Helpers;
@using QuizManager.DBModels;
@using QuizManager.ModelViews;
@using QuizManager.Helpers.Models;
@using QuizManager.XmlModels;

@model PollListRedactorView

@{ 
    XmlQuestionType? type = null;
    switch (Model.Question.Type)
    {
        case QuestionType.Radio:
            type = XmlQuestionType.Radio;
            break;
        case QuestionType.Checkbox:
            type = XmlQuestionType.Checkbox;
            break;
        case QuestionType.ComboBox:
            type = XmlQuestionType.ComboBox;
            break;
    }
}

<div class="container">

    <div>

        @using (Ajax.BeginForm("SaveXmlListPoll", null, new AjaxOptions() { UpdateTargetId = "inner" }, new { id = "SaveForm" }))
        {
            @Html.HiddenFor(x=>x.Section.Id)
            @Html.HiddenFor(x => x.Question.Id)
            @Html.HiddenFor(x => x.Quiz.Id)
            <input type="hidden" name="_XmlModel.ListType" value="@type" />

            <div class="form-inline">

                @Html.LabelFor(x => x.Question.Text, "Question:")

                @Html.TextBoxFor(x => x.Question.Text, new { @class = "form-control" })

                @RenderHelper.AddOptionButton("addLink")

            </div>

            <br />

            <div id="options" class="container form-group">

                @if (Model._XmlModel != null)
                {
                    for (int i = 0; i < Model._XmlModel.Options.Count(); ++i)
                    {
                        <div class="form-group form-inline removeContainer container">

                            @Html.HiddenFor(x => x._XmlModel.Options[i].Id)

                            @Html.TextBoxFor(x => x._XmlModel.Options[i].Text, new { @class = "form-control" })

                            @RenderHelper.RemoveOptionButton("removeLink")

                        </div>
                    }
                }

            </div>

            <div class="form-group pull-right">
                <input type="submit" class="btn btn-success" value="Save" />
            </div>
        }

    </div>

    <div class="hidden">

        <div id="option" class="removeContainer form-group form-inline container">

            <input type="hidden" />

            <input type="text" class="form-control" />

            @RenderHelper.RemoveOptionButton("removeLink")

        </div>

    </div>

</div>
