@using QuizManager.Helpers;
@using QuizManager.DBModels;
@using QuizManager.ModelViews;

@model PerQuestionView

@{
    var testSave = (TestSave)Session["save"];

    IEnumerable<SelectListItem> questionList = null;

    if (Model.Question.Quiz.Type != QuizType.Adaptive &&
        Model.Question.Quiz.TimeLimitType != QuizTimeLimitType.QuestionLimited)
    {
        questionList = testSave.QuestionOrders.Select(x => new SelectListItem()
        {
            Selected = Model.Question.Id == x,
            Text = (testSave.QuestionOrders.IndexOf(x) + 1).ToString(),
            Value = x.ToString()
        }).ToList();
    }
}


@using (Ajax.BeginForm("TestQuestion", null, new AjaxOptions() { UpdateTargetId = "tests" }, new { id = "TestsForm", name = "ajaxForm" }))
{
    if (Model.Question.Quiz.Type != QuizType.Adaptive &&
        Model.Question.Quiz.TimeLimitType != QuizTimeLimitType.QuestionLimited)
    {
        @RenderHelper.QuestionTable(questionList, "btnSubmit")
    }

    <br />

    <div>
        @Html.Partial(Model.Test.View, Model.Test)
    </div>

    <div class="text-center">

        <span id="navigation">

            @Html.HiddenFor(x => x.Question.Id)

            @if (Model.PrevVisibility)
            {
                <input type="submit" class="btn btn-info questionwell" name="btnSubmit" value="Previous" />
            }

            @if (Model.NextVisibility)
            {
                <input type="submit" class="btn btn-info questionwell" name="btnSubmit" value="Next" />
            }

            @if (Model.IsFinish)
            {
                <input type="submit" class="btn btn-info questionwell" name="btnSubmit" value="Finish" />
            }

        </span>

    </div>

}

@section scripts
{
    <script>

        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

    </script>
}


@if (Model.Question.Quiz.TimeLimitType == QuizTimeLimitType.QuestionLimited)
{
    <script>

        var totalSeconds = @Model.Question.TimeLimit.Value.TotalSeconds;

        //var totalSeconds = 3000;

        function TimerValue() {

            var seconds = totalSeconds % 60;
            var minutes = parseInt(totalSeconds / 60);
            var hours = parseInt(totalSeconds / 3600);

            return "Time Left: " + TimeFormat(hours) + ":" + TimeFormat(minutes) + ":" + TimeFormat(seconds);
        }

        function TimeFormat(value) {
            if (value > 9) {
                return value.toString();
            }
            return "0" + value;
        }

        function Finish() {

            var submitButton = document.getElementsByName('btnSubmit')[0];

            submitButton.setAttribute('name', '');

            $('#TestsForm').append('<input type="hidden" name="btnSubmit" value="QuestionTime" />')

            submitButton.click();
        }

        var _tick;

        clearInterval(_tick);

        function Tick() {

            document.getElementById('timer').innerText = TimerValue();

            _tick = setInterval(function () {

                totalSeconds--;

                if (totalSeconds == 0) {
                    alert('Time limit reached');
                    clearInterval(_tick);
                    Finish();
                }

                document.getElementById('timer').innerText = TimerValue();

            }, 1000);
        }

        Tick();

    </script>
}
