@using QuizManager.Helpers;
@using QuizManager.DBModels;
@using QuizManager.ModelViews;
@using QuizManager.XmlModels;

@model TestView

@{
    XmlQuestionType? ListType = null;
    var Options = new List<XmlPollOption>();

    if (Model.Model is XmlPollList)
    {
        var testList = Model.Model as XmlPollList;
        ListType = (XmlQuestionType)testList.ListType;
        Options = testList.Options;
    }
    else if (Model.Model is XmlTestList)
    {
        var testList = Model.Model as XmlTestList;
        ListType = (XmlQuestionType)testList.ListType;
        Options = testList.Options.Select(x => new XmlPollOption()
        {
            Id = x.Id,
            Text = x.Text
        }).ToList();
    }

    var qPath = "";
    var nPath = "";
    if(Model.Quiz.TestingType == QuizTestingType.PerSection)
    {
        qPath = "SectionData[" + Model.Index + "].QuestionId";
        nPath = "SectionData[" + Model.Index + "].Answers";    
    }
    else if(Model.Quiz.TestingType == QuizTestingType.PerQuestion)
    {
        qPath = "QuestionData.QuestionId";
        nPath = "QuestionData.Answers";
    }

    var selectList = Options.Select(x => new SelectListItem()
    {
        Text = x.Text,
        Value = x.Id.ToString()
    }).ToList();
}

@Html.Hidden(qPath, Model.Question.Id)

<div class="well questionwell">

    <div class="pull-right myhmargin">

        @if (Model.Question.Type == QuestionType.Checkbox)
        {
            @RenderHelper.InfoButton("Select 1 or more options")
        }
        else
        {
            @RenderHelper.InfoButton("Select only 1 option")
        }

    </div>

    <h4>@Model.Question.Text</h4>

</div>

@if (ListType == XmlQuestionType.ComboBox)
{
    if(Model.Save != null && Model.Save.Answers != null)
    {
        var selectedValue = Model.Save.Answers.Single();

        if(selectedValue != "")
        {
            selectList.Find(x => x.Value == selectedValue).Selected = true;
        }
    }

    <div class="form-group">
        @Html.DropDownList(nPath, selectList, "Please select answer", new { @class = "form-control" })
    </div>
}
else
{
    <ul class="list-group">
        @foreach (var item in Options)
        {
            bool isChecked = false;
            
            var val = Model?.Save?.Answers?.Contains(item.Id.ToString());

            if(val != null)
            {
                isChecked = (bool)val;
            }

            <li class="list-group-item">
                @if (ListType == XmlQuestionType.Radio)
                {
                    <div class="radio myboxmargin">
                        <span>
                            @Html.RadioButton(nPath, item.Id, isChecked)
                            <h4>@item.Text</h4>
                        </span>
                    </div>
                }
                else if (ListType == XmlQuestionType.Checkbox)
                {
                    <div class="checkbox myboxmargin">
                        <span>
                            @RenderHelper.CheckBoxSimple(nPath, isChecked, item.Id.ToString())
                            <h4>@item.Text</h4>
                        </span>
                    </div>
                }
            </li>
        }
    </ul>
}
