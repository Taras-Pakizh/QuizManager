@using QuizManager.Helpers;
@using QuizManager.DBModels;
@using QuizManager.ModelViews;

@model SectionView

@using (Ajax.BeginForm("TestSection", null, new AjaxOptions() { UpdateTargetId = "tests" }, new { id = "TestsForm", name = "ajaxForm" }))
{
    int index = 0;
    foreach (var item in Model.Tests)
    {
        if (index != 0)
        {
            <hr class="questionhr" />
        }

        <div @*class="test"*@>
            @{
                item.Index = index;
                ++index;
            }
            @Html.Partial(item.View, item)
        </div>
    }

    <div class="text-center">

        <span id="navigation">

            @Html.HiddenFor(x => x.QuizId)

            @Html.HiddenFor(x => x.SectionId)

            @if (Model.PrevVisibility)
            {
                <input type="submit" class="btn btn-info mycolor" name="btnSubmit" value="Previous" />
            }

            @if (Model.NextVisibility)
            {
                <input type="submit" class="btn btn-info mycolor" name="btnSubmit" value="Next" />
            }

            @if (Model.IsFinish)
            {
                <input type="submit" class="btn btn-info mycolor" name="btnSubmit" value="Finish" />
            }

        </span>

    </div>

}

@section scripts
{
    <script>

        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

    </script>
}


@if (Model.Section.Quiz.TimeLimitType == QuizTimeLimitType.SectionLimited &&
    Model.Section.TimeLimitType == SectionTimeLimitType.Limited)
{
    <script>

        var totalSeconds = @Model.Section.TimeLimit.Value.TotalSeconds;

        function TimerValue() {

            var seconds = totalSeconds % 60;
            var minutes = parseInt(totalSeconds / 60);
            var hours = parseInt(totalSeconds / 3600);

            return "Time Left: " + TimeFormat(hours) + ":" + TimeFormat(minutes) + ":" + TimeFormat(seconds);
        }

        function TimeFormat(value) {
            if (value > 9) {
                return value.toString();
            }
            return "0" + value;
        }

        function Finish() {

            var submitButton = document.getElementsByName('btnSubmit')[0];

            submitButton.setAttribute('name', '');

            $('#TestsForm').append('<input type="hidden" name="btnSubmit" value="SectionTime" />')

            submitButton.click();
        }

        function Tick() {

            document.getElementById('timer').innerText = TimerValue();

            var _tick = setInterval(function () {

                totalSeconds--;

                if (totalSeconds == 0) {
                    alert('Time limit reached');
                    Finish();
                    clearInterval(_tick);
                }

                document.getElementById('timer').innerText = TimerValue();

            }, 1000);
        }

        Tick();

    </script>
}