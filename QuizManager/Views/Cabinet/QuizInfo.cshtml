@using QuizManager.Helpers;
@using QuizManager.DBModels;
@using QuizManager.ModelViews;

@model QuizInfoView
@{
    ViewBag.Title = "QuizInfo";
}

@{ 
    var attemptView = new TableView()
    {
        data = Model.Attempts.Select(x => new
        {
            Mark = x.Mark,
            Time = x.Time,
            UserName = x.User.UserName,
            Email = x.User.Email,
        }),
        HeaderNames = new List<string>()
        {
            "User", "Email", "Time of passing", "Mark"
        },
        PropertyNames = new List<string>()
        {
            "UserName", "Email", "Time", "Mark"
        },
        Links = Model.Attempts.Select(y=>new Dictionary<string, string>()
        {
            { "Open", Url.Action("GetAttepmt", "Cabinet") + "?id=" + y.Id }
        }).ToList()
    };


}

<div class="container">

    <div class="container">
        <h4>Quiz:</h4>
    </div>
    
    <div class="container" id="quiz">

        @Html.Partial("TableByProperty", new TableView()
        {
            data = new List<Quiz>() { Model.Quiz },
            PropertyNames = new List<string>()
            {
                "Name", "Type", "TimeLimit", "QuestionCount"
            },
            HeaderNames = new List<string>()
            {
                "Name", "Type", "Time limit", "Question count"
            }
        })

    </div>

    <br />

    <div id="attempts" class="container">

        maybe some features for filtering

        users

        groups

        time passing

        pagination

        @Html.Partial("TableByProperty", attemptView)

    </div>

</div>